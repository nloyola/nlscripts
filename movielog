#!/usr/bin/perl -w

use File::Find;
use File::Basename;
use Data::Dumper;
use Getopt::Long;

my $dvddir;
my @movie_names = ();
my $moviefilename = "/home/nelson/movies.txt";
my $backup_moviefilename = "/tmp/movies_backup.txt";
my $debug;

if (!GetOptions ('debug' => \$debug)) {
    die "ERROR: bad options in command line\n";
}

if ($#ARGV >= 0) {
    $dvddir = $ARGV[0];
}

if (!defined($dvddir)) {
    $dvddir = "/media/Xvid";
}
elsif (! -d $dvddir) {
    die "$dvddir is not a valid directory\n";
}

sub readDir {
    my $dir = shift;

    opendir(DIRHANDLE, $dir) || die "Cannot opendir $dir: $!";
    foreach my $name (sort readdir(DIRHANDLE)) {
        if (-d "$dir/$name") {
            if ($name =~ /^\.+/) { next; }

            push(@movie_names, $name);
        }
    }
}

if ($debug) {
    my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
    printf "%4d-%02d-%02d %02d:%02d:%02d\n",
        $year+1900,$mon+1,$mday,$hour,$min,$sec;

    readDir($dvddir);
    foreach (@movie_names) {
        print "  ", $_, "\n";
    }
    exit;
}

if (!-e $moviefilename) {
    die "file $moviefilename not found\n";
}

rename $moviefilename, $backup_moviefilename;

open(BACKUP, "< $backup_moviefilename")
    or die "can't open file $backup_moviefilename\n";

open(MOVIEFILE, "> $moviefilename")
    or die "can't open file $moviefilename\n";

my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);


printf "%4d-%02d-%02d %02d:%02d:%02d\n",
    $year+1900,$mon+1,$mday,$hour,$min,$sec;

printf MOVIEFILE "%4d-%02d-%02d %02d:%02d:%02d\n",
    $year+1900,$mon+1,$mday,$hour,$min,$sec;

readDir($dvddir);
foreach (@movie_names) {
    print MOVIEFILE " " . $_ . "\n";
    print " " . $_ . "\n";
}

print MOVIEFILE "\n";

while (<BACKUP>) {
    print MOVIEFILE $_;
}

close(MOVIEFILE);
close(BACKUP);

1;
